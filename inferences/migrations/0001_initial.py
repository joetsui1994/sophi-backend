# Generated by Django 4.2.19 on 2025-03-10 01:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import inferences.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('simulations', '0003_alter_simulation_uuid'),
    ]

    operations = [
        migrations.CreateModel(
            name='SamplesAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('earliest_time', models.PositiveIntegerField()),
                ('latest_time', models.PositiveIntegerField()),
                ('target_proportion', models.FloatField(blank=True, null=True)),
                ('target_number', models.PositiveIntegerField(blank=True, null=True)),
                ('target_demes', models.JSONField(blank=True, null=True)),
                ('min_number', models.PositiveIntegerField(default=0)),
                ('temporal_strategy', models.CharField(blank=True, choices=[('UC', 'Uniform allocation in proportion to case incidence'), ('IUC', 'Uniform allocation in inverse proportion to case incidence'), ('EV', 'Even allocation of samples across time'), ('EN', 'Earliest N samples'), ('LN', 'Latest N samples')], default='UC', max_length=3, null=True)),
                ('spatial_strategy', models.CharField(blank=True, choices=[('UC', 'Uniform allocation in proportion to number of cases'), ('IUC', 'Uniform allocation in inverse proportion to number of cases'), ('UP', 'Uniform allocation in proportion to population size'), ('IUP', 'Uniform allocation in inverse proportion to population size'), ('EV', 'Even allocation of samples across demes')], default='UC', max_length=3, null=True)),
                ('allocation_priority', models.CharField(choices=[('T', 'Temporal prioritization'), ('S', 'Spatial prioritization'), ('J', 'Joint prioritization')], default='J', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Inference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('uuid', models.CharField(default=inferences.models.generate_short_uuid, editable=False, max_length=8, unique=True)),
                ('sample_ids', models.JSONField(blank=True, null=True)),
                ('inferred_migratory_events', models.JSONField(blank=True, null=True)),
                ('inferred_tree_json', models.JSONField(blank=True, null=True)),
                ('dta_method', models.CharField(choices=[('TT', 'Maximum-likelihood using TreeTime'), ('PH', 'Parsimony using phangorn')], default='TT', max_length=2)),
                ('inferred_tree_file', models.FileField(upload_to=inferences.models.upload_inferred_tree_file_path)),
                ('note', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCESS', 'Successful'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('evaluations', models.JSONField(blank=True, null=True)),
                ('random_seed', models.PositiveIntegerField(default=inferences.models.generate_random_seed)),
                ('head', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='inferences.inference')),
                ('samples_allocation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inferences.samplesallocation')),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simulations.simulation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
